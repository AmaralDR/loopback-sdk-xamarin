{
"models": [
<% for (var modelName in models) {
     var meta = models[modelName];
     modelName = modelName[0].toUpperCase() + modelName.slice(1);
-%>
{
  "name" : "<%-: modelName  %>",
  "plural" : "<%-: meta.pluralName  %>",
  "base" :  "<%-:meta.baseModel %>",
  "idInjection" : <% if(meta.isGenerated){%>true<% }else { %>false<% } %>,
  "properties" : {
<% for(var param in meta.params){ -%>
        "<%-: param   %>": { <% var name = meta.params[param].type.name%> <%if(name=='ModelConstructor') name = meta.params[param].type.modelName%> <%if(name==null) name = meta.params[param].type[0].modelName%>  <%if(name==null) name = meta.params[param].type[0].name%>
            "type" : "<%-: name %>",
            "required" : <%: if(!meta.params[param].required){%>false<% }else {%> true<% } %>,
            "isId" : <%: if(!meta.params[param ].id){%>false<% }else {%> true<% } %>,
            "isArray" : <%: if(!meta.params[param].type.prototype){%>true <% }else {%> false<% } %>,
            "className" : <%: if(meta.params[param].className){%>"<%-: meta.params[param].className  %>" <% }else {%> ""<% } %>
        }<% if(!(meta.params[param] === meta.params[Object.keys(meta.params)[Object.keys(meta.params).length-1]])){ %>,<% } %>
<% }; -%>
    },
    "validations": [],
    "relations": {
    <% for(var rel in meta.relations){ -%>
    "<%-: rel %>": { "foreignKey": "<%-: meta.relations[rel].foreignKey %>", "model": "<%-: meta.relations[rel].model %>", "type": "<%-: meta.relations[rel].type %>"} <% if(!(meta.relations[rel] === meta.relations[Object.keys(meta.relations)[Object.keys(meta.relations).length-1]])){ %>,<% } %>
    <% } -%>
    },
    "acls": [],
    "methods":
    {
<% for(var action in meta.methods) {
     var methodName = meta.methods[action].name.split('.').join('$');
     meta.methods[action].accepts = meta.methods[action].accepts || [];
     var paramsMethod = meta.methods[action].accepts.filter(function(item){
        if(item =='toObject'){
            return false;
        }
        if (typeof(item.http) === "function") {
            return false;
        }
        return true;
     });
-%>
<% if(!methodName) continue -%>
        "<%-: methodName  %>": {
          "url": " <%-: meta.methods[action].getFullPath()  %>",
          "method": "<%-: meta.methods[action].getHttpMethod()  %>",
          "params": {
<%  for(var acc in paramsMethod) { -%>
<% if(acc =='toObject') continue -%>
<% if(typeof(paramsMethod[acc].http) === "function") continue -%>
<% var paramPlacement = "query" -%>
<% if(meta.methods[action].getFullPath().indexOf(":" + paramsMethod[acc].arg) >= 0) paramPlacement = "path" -%>
<% if(typeof(paramsMethod[acc].http) != "undefined") paramPlacement = paramsMethod[acc].http.source -%>
            "<%- paramsMethod[acc].arg %>" : {"type" : "<%-: paramsMethod[acc].type %>", "placement" : "<%-: paramPlacement %>"}<% if(!(paramsMethod[acc] === paramsMethod[Object.keys(paramsMethod)[Object.keys(paramsMethod).length-1]])){ %>,<% } %>
<% }; -%>
          },
          "returns": <%if(meta.methods[action].returns.length <= 1) {%>{
<%  for(var ret in meta.methods[action].returns) { -%> 
    <%if(meta.methods[action].returns[ret].arg==null) break;%>
          "<%- meta.methods[action].returns[ret].arg %>" : "<%-: meta.methods[action].returns[ret].type %>"
        <% if(!(meta.methods[action].returns[ret] === meta.methods[action].returns[Object.keys(meta.methods[action].returns)[Object.keys(meta.methods[action].returns).length-1]])){ %>,<% } %>,
            "isArray": <% if (meta.methods[action].isReturningArray()) { %>true<%}else {%>false<% } %>,
            "className": <% if (meta.methods[action].returns[ret].className) { %>"<%-: meta.methods[action].returns[ret].className %>"<%}else {%>""<% } %>,
            "root": <% if (meta.methods[action].returns[ret].root){%>true<%} else { %>false<%}};%>
          }<%} else {%>{"not_supported_yet": "more_than_one_return_arg", "isArray": "false", "root": "false"}<%}%>,
          "description": "<%- meta.methods[action].description !== undefined ? meta.methods[action].description.replace("'", "-") : "No description given." %>"
       }<% if(!(meta.methods[action] === meta.methods[Object.keys(meta.methods)[Object.keys(meta.methods).length-1]])){ %>,<% } %>
<%  };  %>
    }
}<% if(!(meta === models[Object.keys(models)[Object.keys(models).length-1]])){ %>,<% } %>
<% }  -%>
]
}